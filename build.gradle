group 'uk.sky.streaming'
version '0.9.0-forked'

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'maven-publish'

ext {
    ideaGeneratedSources = file('build/classes/java/main')
}

idea.module {
    sourceDirs += ideaGeneratedSources
    generatedSourceDirs += ideaGeneratedSources
}

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.immutables:value:2.5.6'
    compile group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.0'

    testCompile 'junit:junit:4.12'
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.14.0'

}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

archivesBaseName = "m3u8-parser"


publishing {
    repositories {
        maven {
            name 'skyReleases'
            url skyReleasesRepo
        }
    }
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
        }
    }
}

//if (project.hasProperty('ossrhUsername')) {
//    signing {
//        sign configurations.archives
//    }
//
//    uploadArchives {
//        repositories {
//            mavenDeployer {
//                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
//
//                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
//                    authentication(userName: ossrhUsername, password: ossrhPassword)
//                }
//
//                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
//                    authentication(userName: ossrhUsername, password: ossrhPassword)
//                }
//
//                pom.project {
//                    name 'm3u8-parser'
//                    packaging 'jar'
//                    artifactId 'm3u8-parser'
//                    description 'm3u8 parser'
//                    url 'https://github.com/carlanton/m3u8-parser'
//
//                    scm {
//                        connection 'scm:git:https://github.com/carlanton/m3u8-parser.git'
//                        developerConnection 'scm:git:git@github.com:carlanton/m3u8-parser.git'
//                        url 'https://github.com/carlanton/m3u8-parser.git'
//                    }
//
//                    licenses {
//                        license {
//                            name 'MIT License'
//                            url 'https://github.com/carlanton/m3u8-parser/blob/master/LICENSE'
//                        }
//                    }
//
//                    developers {
//                        developer {
//                            id 'antonlindstrom'
//                            name 'Anton Lindstr√∂m'
//                            email 'carlantonlindstrom@gmail.com'
//                        }
//                    }
//                }
//            }
//        }
//    }
//}
